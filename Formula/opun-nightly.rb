# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class OpunNightly < Formula
  desc "AI code agent automation framework (Nightly/Prerelease)"
  homepage "https://github.com/rizome-dev/opun"
  version "0.1.7-nightly"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/rizome-dev/opun/releases/download/v0.1.7-nightly/opun_Darwin_x86_64.tar.gz"
      sha256 "1b840fb63f92a5c763c20036d0e8bce0666f6ee2ee702706d0835e01743322c9"

      def install
        bin.install "opun"

        # Generate and install shell completions
        generate_completions_from_executable(bin/"opun", "completion")
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/rizome-dev/opun/releases/download/v0.1.7-nightly/opun_Darwin_arm64.tar.gz"
      sha256 "bae2b23b3977ce7f3f630ac90d08c1924006a18f70476e3ccf3b3501b11c0081"

      def install
        bin.install "opun"

        # Generate and install shell completions
        generate_completions_from_executable(bin/"opun", "completion")
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/rizome-dev/opun/releases/download/v0.1.7-nightly/opun_Linux_x86_64.tar.gz"
      sha256 "0a4fa3b830900d6a51d6d529a871a02de27faef664c3c83a401e04dd3e0f2f41"
      def install
        bin.install "opun"

        # Generate and install shell completions
        generate_completions_from_executable(bin/"opun", "completion")
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/rizome-dev/opun/releases/download/v0.1.7-nightly/opun_Linux_arm64.tar.gz"
      sha256 "5ba82290287277ab4ce2d46f685e77a6e68353248a4dfcf7fbef82b429ab9320"
      def install
        bin.install "opun"

        # Generate and install shell completions
        generate_completions_from_executable(bin/"opun", "completion")
      end
    end
  end

  conflicts_with "opun"

  test do
    system "#{bin}/opun", "--version"
  end
end
